{"version":3,"sources":["components/User/user.reducer.js","components/Admin/admin.reducer.js","reducers.js","constants.js","store.js","helpers/setAuthToken.js","components/User/user.action.js","components/User/LoginForm.js","components/User/UserBar.js","components/commons/Facebook.js","components/layout/Header.js","components/layout/Footer.js","components/commons/ScrollToTop.js","components/User/RegisterForm.js","components/layout/Home.js","components/commons/UploadImage.js","helpers/isEmpty.js","components/User/UploadCertForm.js","components/commons/CertImage.js","components/User/MyCert.js","components/commons/PrivateRoute.js","components/commons/Dropdown.js","components/User/PostVideoForm.js","components/User/MyPost.js","components/commons/SidebarLink.js","components/Admin/SidebarAdmin.js","components/Admin/PostBoard.js","components/Admin/admin.action.js","components/Admin/CertBoard.js","Routers.js","helpers/getAuth.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isAuthenticated","loading","message","user","_posts","certs","posts","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","data","admin","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","apply","concat","logout","next","localStorage","jwtToken","jwt_decode","exp","Date","now","clear","dispatch","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","removeItem","LoginForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","email","password","onChange","bind","assertThisInitialized","onSubmit","e","setState","defineProperty","target","name","value","preventDefault","login","react_default","a","createElement","className","style","height","id","placeholder","backgroundColor","color","href","Component","connect","errors","_ref","post","then","res","_res$data$data","setItem","accessToken","catch","err","response","toast","error","UserBar","role","Link","to","src","firstName","lastName","data-toggle","aria-haspopup","aria-expanded","class","onClick","onLogout","mapDispatchToProps","Facebook","_Component","responseFacebook","inherits","createClass","key","loginFacebook","Fragment","facebook_login_with_button_default","appId","autoLoad","fields","callback","cssClass","icon","_res$data$data2","Header","console","log","User_UserBar","User_LoginForm","Footer","position","left","bottom","width","paddingLeft","fontSize","fontWeight","ScrollToTop","prevProps","location","window","scrollTo","children","withRouter","RegisterForm","nextProps","register","history","margin","_ref2","success","setTimeout","info","Home","redirectToReferrer","from","pathname","Redirect","User_RegisterForm","commons_Facebook","UploadImage","onBlur","accept","htmlFor","isEmpty","keys","trim","UploadCertForm","selfie","front","back","files","uploadCert","image","commons_UploadImage","_ref3","formData","FormData","append","content-type","CertImage","title","objectFit","alt","MyCert","commons_CertImage","frontIdentityCard","backIdentityCard","component","rest","objectWithoutProperties","Route","assign","render","Dropdown","onChoose","aria-labelledby","PostVideoForm","link","subject","genre","description","onPaste","postVideo","clipdata","clipboardData","getData","commons_Dropdown","video","MyPost","getPosts","postList","map","el","index","scope","get","SidebarLink","label","activeOnlyWhenExact","path","exact","active","match","textDecoration","SideBarAdmin","push","commons_SidebarLink","pure","PostBoard","componentDidMount","postId","approvePost","content","_this2","userId","_id","onApprove","body","CertBoard","getCerts","approveCert","cert","Routers","BrowserRouter","commons_ScrollToTop","layout_Header","Switch","commons_PrivateRoute","SidebarAdmin","getAuth","decoded","currentTime","App","es","react_toastify_lib","autoClose","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3fb8dbe7.chunk.js","sourcesContent":["import {\r\n  SET_CURRENT_USER,\r\n  PROFILE_LOADING,\r\n  GET_POSTS,\r\n  UPLOAD_CERT,\r\n  POST_VIDEO,\r\n  REGISTER\r\n} from '../../constants';\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  loading: false,\r\n  message: '',\r\n  user: {},\r\n  _posts: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case REGISTER:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload.message\r\n      };\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !!action.payload,\r\n        loading: false,\r\n        user: action.payload\r\n      };\r\n    case PROFILE_LOADING:\r\n      return {\r\n        ...state,\r\n        message: '',\r\n        loading: true\r\n      };\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        _posts: action.payload,\r\n        loading: false\r\n      };\r\n    case UPLOAD_CERT:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: action.payload.data.user,\r\n        message: action.payload.message\r\n      };\r\n    case POST_VIDEO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: action.payload.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_POSTS_AD,\r\n  GET_CERT_AD,\r\n  APPROVE_POST_AD,\r\n  APPROVE_CERT_AD\r\n} from '../../constants';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  certs: [],\r\n  posts: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_POSTS_AD:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        posts: action.payload\r\n      };\r\n    case GET_CERT_AD:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        certs: action.payload\r\n      };\r\n    case APPROVE_POST_AD:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n        loading: false\r\n      };\r\n    case APPROVE_CERT_AD:\r\n      return {\r\n        ...state,\r\n        certs: action.payload,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport userReducer from './components/User/user.reducer';\r\nimport adminReducer from './components/Admin/admin.reducer';\r\n\r\nexport default combineReducers({\r\n  user: userReducer,\r\n  admin: adminReducer\r\n});\r\n","//Config\r\nexport const ENDPOINT = 'http://localhost:5000';\r\n\r\n//User\r\nexport const LOGIN = 'LOGIN';\r\nexport const REGISTER = 'REGISTER';\r\nexport const PROFILE_LOADING = 'PROFILE_LOADING';\r\nexport const GET_CURRENT_USER = 'GET_CURRENT_USER';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const UPLOAD_CERT = 'UPLOAD_CERT';\r\nexport const POST_VIDEO = 'POST_VIDEO';\r\nexport const GET_POSTS = 'GET_POSTS';\r\n\r\n//Admin\r\nexport const GET_POSTS_AD = 'GET_POSTS_AD';\r\nexport const APPROVE_POST_AD = 'APPROVE_POST_AD';\r\nexport const APPROVE_CERT_AD = 'APPROVE_CERT_AD';\r\nexport const GET_CERT_AD = 'GET_CERT_AD';\r\n\r\n//Error\r\nexport const GET_ERROR = 'GET_ERROR';\r\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\r\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport jwt_decode from 'jwt-decode';\n\nconst initialState = {};\n\nconst logout = store => next => action => {\n  if (localStorage.jwtToken) {\n    const decoded = jwt_decode(localStorage.jwtToken);\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.clear();\n      store.dispatch(logout());\n    }\n  }\n  next(action);\n};\nconst middleware = [thunk];\n\nif (process.env.NODE_ENV === `development`) {\n  const { createLogger } = require('redux-logger');\n  const logger = createLogger({\n    collapsed: true,\n    diff: true\n  });\n  middleware.push(logger);\n}\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware, logout))\n);\n\nexport default store;\n","import axios from 'axios';\r\n\r\nexport default token => {\r\n  token\r\n    ? (axios.defaults.headers.common['Authorization'] = token)\r\n    : delete axios.defaults.headers.common['Authorization'];\r\n};\r\n","import axios from 'axios';\r\nimport {\r\n  ENDPOINT,\r\n  SET_CURRENT_USER,\r\n  PROFILE_LOADING,\r\n  GET_ERROR,\r\n  UPLOAD_CERT,\r\n  POST_VIDEO,\r\n  GET_POSTS,\r\n  REGISTER,\r\n  LOGIN\r\n} from '../../constants';\r\nimport setAuthToken from '../../helpers/setAuthToken';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const login = ({ email, password }) => dispatch => {\r\n  axios\r\n    .post(`/api/auth/login`, { email, password })\r\n    .then(res => {\r\n      const { token, user } = res.data.data;\r\n      localStorage.setItem('jwtToken', token.accessToken);\r\n      setAuthToken(token.accessToken);\r\n      dispatch(setCurrentUser(user));\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERROR,\r\n        payload: err.response.data.errors\r\n      });\r\n      toast.error(err.response.data.error);\r\n    });\r\n};\r\n\r\nexport const loginFacebook = response => dispatch => {\r\n  axios\r\n    .post('/api/auth/facebook', response)\r\n    .then(res => {\r\n      const { token, user } = res.data.data;\r\n      localStorage.setItem('jwtToken', token.accessToken);\r\n      setAuthToken(token.accessToken);\r\n      dispatch(setCurrentUser(user));\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERROR,\r\n        payload: err.response.data.errors\r\n      });\r\n      toast.error(err.response.data.error);\r\n    });\r\n};\r\n\r\nexport const register = (\r\n  { firstName, lastName, email, password },\r\n  history\r\n) => dispatch => {\r\n  axios\r\n    .post(`/api/auth/register`, { firstName, lastName, email, password })\r\n    .then(res => {\r\n      dispatch({\r\n        type: REGISTER,\r\n        payload: res.data\r\n      });\r\n      toast.success(res.data.message);\r\n      setTimeout(() => {\r\n        toast.info('Now you can login');\r\n      }, 2100);\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERROR,\r\n        payload: err.response.data.errors\r\n      });\r\n    });\r\n};\r\n\r\nexport const getCurrentUser = dispatch => {\r\n  dispatch({ type: PROFILE_LOADING });\r\n  axios.get('/api/auth').then(res => {\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: res.data.data.user\r\n    });\r\n  });\r\n};\r\n\r\nexport const setCurrentUser = user => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: user\r\n  };\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem('jwtToken');\r\n  setAuthToken(false);\r\n  dispatch(setCurrentUser(null));\r\n};\r\n\r\nexport const uploadCert = ({ selfie, front, back }) => dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data'\r\n    }\r\n  };\r\n  let formData = new FormData();\r\n  formData.append('selfie', selfie);\r\n  formData.append('front', front);\r\n  formData.append('back', back);\r\n  console.log(formData);\r\n  axios\r\n    .post('/api/user/cert-image', formData, config)\r\n    .then(res => {\r\n      dispatch({\r\n        type: UPLOAD_CERT,\r\n        payload: res.data\r\n      });\r\n      toast.success(res.data.message);\r\n    })\r\n    .catch(err => {\r\n      console.log(err.response);\r\n      toast.error(err.response.data.error);\r\n    });\r\n};\r\n\r\nexport const postVideo = video => dispatch => {\r\n  axios\r\n    .post('/api/post/post', video)\r\n    .then(res => {\r\n      dispatch({\r\n        type: POST_VIDEO,\r\n        payload: res.data\r\n      });\r\n      toast.success(res.data.message);\r\n    })\r\n    .catch(err => {\r\n      toast.error(err.response.data.errors);\r\n    });\r\n};\r\n\r\nexport const getPosts = () => dispatch => {\r\n  axios.get('/api/user/posts').then(res => {\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data.data.posts\r\n    });\r\n  });\r\n};\r\n","import React, { Component } from 'react';\r\nimport { login } from './user.action';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass LoginForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: ''\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.login(this.state);\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        className='form-row col-7 justify-center'\r\n        style={{ height: '35px' }}\r\n        onSubmit={this.onSubmit}\r\n      >\r\n        <div className='form-group col-3'>\r\n          <input\r\n            type='email'\r\n            name='email'\r\n            className='form-control form-control-sm'\r\n            id='staticEmail2'\r\n            placeholder='Email'\r\n            onChange={this.onChange}\r\n            value={this.state.email}\r\n          />\r\n        </div>\r\n        <div className='form-group col-3'>\r\n          <input\r\n            type='password'\r\n            name='password'\r\n            className='form-control form-control-sm'\r\n            id='inputPassword2'\r\n            placeholder='Password'\r\n            onChange={this.onChange}\r\n            value={this.state.password}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <button\r\n            type='submit'\r\n            className='btn btn-sm btn-outline-secondary'\r\n            style={{ backgroundColor: '#419698', color: 'white' }}\r\n          >\r\n            Sign in\r\n          </button>\r\n        </div>\r\n        <div className='form-group pt-1 pl-2'>\r\n          <a href>\r\n            <small id='emailHelp' style={{ color: 'black' }}>\r\n              Forgot password?\r\n            </small>\r\n          </a>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  //\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(LoginForm);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { logout } from './user.action';\r\nclass UserBar extends Component {\r\n  static propTypes = {\r\n    // prop: PropTypes\r\n  };\r\n  onLogout(e) {\r\n    e.preventDefault();\r\n    this.props.logout();\r\n  }\r\n  render() {\r\n    const { user } = this.props.user;\r\n    return (\r\n      <div\r\n        className='collapse navbar-collapse font_size_menu'\r\n        id='navbarSupportedContent'\r\n      >\r\n        <ul className='navbar-nav ml-md-auto d-md-flex'>\r\n          {user.role === 'admin' && (\r\n            <Link to='/admin' className='btn btn-secondary btn-sm mr-3 my-auto'>\r\n              Admin\r\n            </Link>\r\n          )}\r\n          <div className='btn-group'>\r\n            <button className='btn btn-secondary btn-sm' type='button'>\r\n              <img src='/images/picture.svg' height='32px' />\r\n              {` ${user.firstName} ${user.lastName}`}\r\n            </button>\r\n            <button\r\n              type='button'\r\n              className='btn btn-sm btn-secondary dropdown-toggle dropdown-toggle-split'\r\n              data-toggle='dropdown'\r\n              aria-haspopup='true'\r\n              aria-expanded='false'\r\n            >\r\n              <span className='sr-only'>Toggle Dropdown</span>\r\n            </button>\r\n            <div className='dropdown-menu'>\r\n              <Link to='/my-certificate' class='dropdown-item'>\r\n                My certifacte\r\n              </Link>\r\n              <Link to='/my-post' class='dropdown-item'>\r\n                My post\r\n              </Link>\r\n              <Link\r\n                to='/'\r\n                class='dropdown-item'\r\n                onClick={this.onLogout.bind(this)}\r\n              >\r\n                Logout\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  logout\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserBar);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { loginFacebook } from '../User/user.action';\r\n\r\nexport class Facebook extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.responseFacebook = this.responseFacebook.bind(this);\r\n  }\r\n  static propTypes = {\r\n    // prop: PropTypes\r\n  };\r\n  responseFacebook(response) {\r\n    // console.log();\r\n    this.props.loginFacebook(response);\r\n  }\r\n  render() {\r\n    const { isAuthenticated } = this.props.user;\r\n    return (\r\n      <>\r\n        {!isAuthenticated && (\r\n          <div className='icon-bar'>\r\n            <FacebookLogin\r\n              appId='1930035377289135'\r\n              autoLoad={true}\r\n              fields='first_name,last_name,name,email,picture'\r\n              callback={this.responseFacebook}\r\n              cssClass='facebook'\r\n              icon={<i className='fab fa-facebook-f'>&nbsp;</i>}\r\n            />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  loginFacebook\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Facebook);\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LoginForm from '../User/LoginForm';\nimport UserBar from '../User/UserBar';\nimport Facebook from '../commons/Facebook';\n\nclass Header extends Component {\n  static propTypes = {\n    // prop: PropTypes\n  };\n\n  render() {\n    const { isAuthenticated } = this.props.user;\n    console.log(isAuthenticated);\n    return (\n      <nav\n        className='navbar navbar-expand-lg navbar-dark'\n        style={{ backgroundColor: '#c1cad0' }}\n      >\n        <Link to='/' className='navbar-brand col-5' style={{ height: '35px' }}>\n          Project CDS\n        </Link>\n        {isAuthenticated ? <UserBar /> : <LoginForm />}\n      </nav>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n","import React from 'react';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div\r\n      className='container-fluid pt-4 mt-4'\r\n      style={{\r\n        backgroundColor: '#434649',\r\n        color: 'white',\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: 0,\r\n        width: '100%'\r\n      }}\r\n    >\r\n      <small\r\n        style={{ paddingLeft: '8%', fontSize: '12px', fontWeight: 'bold' }}\r\n      >\r\n        <a className='text-white pr-3' href>\r\n          User Agreement\r\n        </a>\r\n        <a className='text-white pr-3' href>\r\n          Privacy Policy\r\n        </a>\r\n        <a className='text-white pr-3' href>\r\n          Community Guidelines\r\n        </a>\r\n        <a className='text-white pr-3' href>\r\n          Cookie Policy\r\n        </a>\r\n        <a className='text-white pr-3' href>\r\n          Copyright Policy\r\n        </a>\r\n        <a className='text-white pr-3' href>\r\n          Guest Controls\r\n        </a>\r\n        <a className='text-white pr-3' href>\r\n          Language\r\n        </a>\r\n      </small>\r\n    </div>\r\n  );\r\n}\r\n","import { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            window.scrollTo(0, 0);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { register } from './user.action';\r\n\r\nexport class RegisterForm extends Component {\r\n  static propTypes = {\r\n    // prop: PropTypes\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: ''\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.user.message)\r\n      this.setState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: ''\r\n      });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.register(this.state, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <div\r\n          className='card w-50 col-5 px-0'\r\n          style={{\r\n            margin: 'auto'\r\n          }}\r\n        >\r\n          <div\r\n            className='card-header text-center'\r\n            style={{ backgroundColor: '#f6f8fa' }}\r\n          >\r\n            <p style={{ fontSize: '21px' }}>Be great at what you do</p>\r\n            <p style={{ fontSize: '16px' }}>Get started - it's free.</p>\r\n          </div>\r\n          <form\r\n            className='card-body'\r\n            style={{ backgroundColor: '#edf0f3' }}\r\n            onSubmit={this.onSubmit}\r\n          >\r\n            <label>First name</label>\r\n            <input\r\n              type='text'\r\n              name='firstName'\r\n              className='form-control form-control-sm'\r\n              onChange={this.onChange}\r\n              value={this.state.firstName}\r\n            />\r\n            <label>Last name</label>\r\n            <input\r\n              type='text'\r\n              name='lastName'\r\n              className='form-control form-control-sm'\r\n              onChange={this.onChange}\r\n              value={this.state.lastName}\r\n            />\r\n            <label>Email</label>\r\n            <input\r\n              type='email'\r\n              name='email'\r\n              className='form-control form-control-sm'\r\n              onChange={this.onChange}\r\n              value={this.state.email}\r\n            />\r\n            <label>Password (6 or more characters)</label>\r\n            <input\r\n              type='password'\r\n              name='password'\r\n              className='form-control form-control-sm'\r\n              onChange={this.onChange}\r\n              value={this.state.password}\r\n            />\r\n            <small className='text-muted'>\r\n              By clicking Join now, you agree to the\r\n              <a className='text-muted' href>\r\n                LinkedIn User Agreement\r\n              </a>\r\n              ,\r\n              <a className='text-muted' href>\r\n                Privacy Policy\r\n              </a>\r\n              ,\r\n              <a className='text-muted' href>\r\n                Cookie Policy\r\n              </a>\r\n              .\r\n            </small>\r\n            <p>\r\n              <button\r\n                type='submit'\r\n                className='btn btn-primary w-100'\r\n                style={{ backgroundColor: '#419698' }}\r\n              >\r\n                Join now\r\n              </button>\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user,\r\n  errors: state.errors\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  register\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RegisterForm);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport RegisterForm from '../User/RegisterForm';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Facebook from '../commons/Facebook';\r\n\r\nexport class Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      redirectToReferrer: false\r\n    };\r\n  }\r\n  static propTypes = {\r\n    prop: PropTypes\r\n  };\r\n\r\n  render() {\r\n    let { from } = this.props.location.state || { from: { pathname: '/' } };\r\n    let { redirectToReferrer } = this.state;\r\n    if (redirectToReferrer) return <Redirect to={from} />;\r\n    const { isAuthenticated } = this.props.user;\r\n    return (\r\n      <div className='container-fluid pt-4'>\r\n        {!isAuthenticated && <RegisterForm />}\r\n        <Facebook />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user,\r\n  error: state.error\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst UploadImage = ({ name, value, error, onChange, onBlur }) => {\r\n  return (\r\n    <div className='custom-file'>\r\n      <input\r\n        type='file'\r\n        className='custom-file-input'\r\n        id='customFile'\r\n        onChange={onChange}\r\n        name={name}\r\n        accept='image/*'\r\n      />\r\n      <label className='custom-file-label' htmlFor='customFile'>\r\n        {(value && value.name) || 'Choose file'}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nUploadImage.propTypes = {};\r\n\r\nexport default UploadImage;\r\n","const isEmpty = value =>\r\n    value === undefined ||\r\n    value === null ||\r\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n    (typeof value === 'string' && value.trim().length === 0);\r\n\r\nexport default isEmpty;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport UploadImage from '../commons/UploadImage';\r\nimport { uploadCert } from './user.action';\r\nimport isEmpty from '../../helpers/isEmpty';\r\n\r\nclass UploadCertForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      selfie: null,\r\n      front: null,\r\n      back: null\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  static propTypes = {\r\n    // prop: PropTypes\r\n  };\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.files[0]\r\n    });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.uploadCert(this.state);\r\n  }\r\n  render() {\r\n    const { image } = this.props.user.user;\r\n    return (\r\n      <div className='container'>\r\n        <div\r\n          className='card w-50 col-5 px-0'\r\n          style={{\r\n            margin: 'auto'\r\n          }}\r\n        >\r\n          <div\r\n            className='card-header text-center'\r\n            style={{ backgroundColor: '#f6f8fa' }}\r\n          >\r\n            <p style={{ fontSize: '21px' }}>\r\n              Upload your identification information\r\n            </p>\r\n            <p style={{ fontSize: '16px' }}>Let us can understand you more.</p>\r\n          </div>\r\n          <form\r\n            className='card-body'\r\n            style={{ backgroundColor: '#edf0f3' }}\r\n            onSubmit={this.onSubmit}\r\n          >\r\n            <label>Selfie</label>\r\n            <UploadImage\r\n              name='selfie'\r\n              value={this.state.selfie}\r\n              onChange={this.onChange}\r\n            />\r\n            <label>Front of identity card</label>\r\n            <UploadImage\r\n              name='front'\r\n              value={this.state.front}\r\n              onChange={this.onChange}\r\n            />\r\n            <label>Back of identity card</label>\r\n            <UploadImage\r\n              name='back'\r\n              value={this.state.back}\r\n              onChange={this.onChange}\r\n            />\r\n            <p>\r\n              <button\r\n                type='submit'\r\n                className='btn btn-primary w-100 mt-2'\r\n                style={{ backgroundColor: '#419698' }}\r\n              >\r\n                {isEmpty(image) ? 'Upload' : 'Update'}\r\n              </button>\r\n            </p>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  uploadCert\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UploadCertForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction CertImage({ image, title }) {\r\n  return (\r\n    <div className='col-sm-4'>\r\n      <div\r\n        className='card'\r\n        style={{ height: 'auto', width: '200px', objectFit: 'cover' }}\r\n      >\r\n        <img\r\n          src={image}\r\n          className='card-img-top'\r\n          alt={image}\r\n          style={{ height: '200px', width: '200px', objectFit: 'cover' }}\r\n        />\r\n        <div className='card-body'>\r\n          <p className='card-title'>{title}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCertImage.propTypes = {};\r\n\r\nexport default CertImage;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport CertImage from '../commons/CertImage';\r\nimport { Link } from 'react-router-dom';\r\nclass MyCert extends Component {\r\n  static propTypes = {\r\n    // prop: PropTypes\r\n  };\r\n\r\n  render() {\r\n    const { image } = this.props.user.user;\r\n    return (\r\n      <div className='container'>\r\n        <div\r\n          className='card col-8 px-0'\r\n          style={{\r\n            margin: 'auto'\r\n          }}\r\n        >\r\n          <div\r\n            className='card-header text-center'\r\n            style={{ backgroundColor: '#f6f8fa' }}\r\n          >\r\n            <p style={{ fontSize: '21px' }}>My certificate</p>\r\n          </div>\r\n          <div\r\n            className='card-body row mx-0 py-4'\r\n            style={{ backgroundColor: 'rgb(237, 240, 243)' }}\r\n          >\r\n            {image ? (\r\n              <>\r\n                <CertImage image={image.selfie} title='selfie' />\r\n                <CertImage\r\n                  image={image.frontIdentityCard}\r\n                  title='frontIdentityCard'\r\n                />\r\n                <CertImage\r\n                  image={image.backIdentityCard}\r\n                  title='backIdentityCard'\r\n                />\r\n                <Link\r\n                  to='/add-certificate'\r\n                  className='btn btn-primary w-100 mt-3'\r\n                  style={{ backgroundColor: '#419698' }}\r\n                >\r\n                  Update\r\n                </Link>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div className='card-body'>\r\n                  <p className='card-text'>\r\n                    You have not added your certificate\r\n                  </p>\r\n                </div>\r\n                <Link\r\n                  to='/add-certificate'\r\n                  className='btn btn-primary w-100'\r\n                  style={{ backgroundColor: '#419698' }}\r\n                >\r\n                  Add Now\r\n                </Link>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MyCert);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PrivateRoute = ({ component: Component, user, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props => {\r\n      console.log(user);\r\n      return user.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: '/',\r\n            state: { from: props.location }\r\n          }}\r\n        />\r\n      );\r\n    }}\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  user: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Dropdown = ({ value, onChoose }) => {\r\n  return (\r\n    <div className='dropdown mb-3'>\r\n      <button\r\n        className='btn btn-warning dropdown-toggle shadow'\r\n        type='button'\r\n        id='dropdownMenuButton'\r\n        data-toggle='dropdown'\r\n        aria-haspopup='true'\r\n        aria-expanded='false'\r\n      >\r\n        {value}\r\n      </button>\r\n      <div className='dropdown-menu' aria-labelledby='dropdownMenuButton'>\r\n        <button className='dropdown-item' name='music' onClick={onChoose}>\r\n          Music\r\n        </button>\r\n        <button className='dropdown-item' name='comedy' onClick={onChoose}>\r\n          Comedy\r\n        </button>\r\n        <button className='dropdown-item' name='film' onClick={onChoose}>\r\n          Film\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDropdown.propTypes = {};\r\n\r\nexport default Dropdown;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Dropdown from '../commons/Dropdown';\r\nimport { postVideo } from './user.action';\r\nimport DataTransfer from 'fbjs/lib/DataTransfer';\r\n\r\nclass PostVideoForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      link: '',\r\n      subject: '',\r\n      genre: 'music',\r\n      description: ''\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onChoose = this.onChoose.bind(this);\r\n    this.onPaste = this.onPaste.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onChoose(e) {\r\n    console.log(e.target.name);\r\n    this.setState({ genre: e.target.name });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.postVideo(this.state);\r\n  }\r\n  onPaste(e) {\r\n    console.log('get');\r\n    const clipdata = e.clipboardData || window.clipboardData;\r\n    console.log(clipdata.getData('text/plain'));\r\n  }\r\n  static propTypes = {\r\n    // prop: PropTypes\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='container'>\r\n        <div\r\n          className='card w-50 col-5 px-0'\r\n          style={{\r\n            margin: 'auto'\r\n          }}\r\n        >\r\n          <div\r\n            className='card-header text-center'\r\n            style={{ backgroundColor: '#f6f8fa' }}\r\n          >\r\n            <p style={{ fontSize: '21px' }}>\r\n              Share your favorite videos to everyone\r\n            </p>\r\n            <p style={{ fontSize: '16px' }}>And enjoy them together.</p>\r\n          </div>\r\n          <form\r\n            className='card-body'\r\n            style={{ backgroundColor: '#edf0f3' }}\r\n            onSubmit={this.onSubmit}\r\n          >\r\n            <label>Link</label>\r\n            {/* <div className='input-group mb-3'> */}\r\n            <input\r\n              type='text'\r\n              name='link'\r\n              className='form-control form-control-sm'\r\n              onChange={this.onChange}\r\n              value={this.state.link}\r\n            />\r\n            {/* <div className='input-group-append'>\r\n                <button\r\n                  className='btn btn-outline-secondary btn-sm'\r\n                  type='button'\r\n                  id='button-addon2'\r\n                  onClick={this.onPaste}\r\n                >\r\n                  <i className='fas fa-paste' />\r\n                </button>\r\n              </div>\r\n            </div> */}\r\n\r\n            <label>Subject</label>\r\n            <input\r\n              type='text'\r\n              name='subject'\r\n              className='form-control form-control-sm'\r\n              onChange={this.onChange}\r\n              value={this.state.subject}\r\n            />\r\n            <label>Genre</label>\r\n            <Dropdown\r\n              name='genre'\r\n              onChoose={this.onChoose}\r\n              value={this.state.genre}\r\n            />\r\n            <label>Description (6 or more characters)</label>\r\n            <input\r\n              type='text'\r\n              name='description'\r\n              className='form-control form-control-sm'\r\n              onChange={this.onChange}\r\n              value={this.state.description}\r\n            />\r\n\r\n            <button\r\n              type='submit'\r\n              className='btn btn-primary w-100 mt-3'\r\n              style={{ backgroundColor: '#419698' }}\r\n            >\r\n              Post\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  postVideo\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PostVideoForm);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getPosts } from './user.action';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass MyPost extends Component {\r\n  static propTypes = {\r\n    // prop: PropTypes\r\n  };\r\n  componentDidMount() {\r\n    this.props.getPosts();\r\n  }\r\n  render() {\r\n    const posts = this.props.user._posts;\r\n    let postList;\r\n    if (posts.length) {\r\n      postList = posts.map((el, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <th scope='row'>{index + 1}</th>\r\n            <td>{el.link}</td>\r\n            <td>{el.subject}</td>\r\n            <td>{el.genre}</td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <div className='container'>\r\n        <div\r\n          className='card col-8 px-0'\r\n          style={{\r\n            margin: 'auto'\r\n          }}\r\n        >\r\n          <div\r\n            className='card-header text-center'\r\n            style={{ backgroundColor: '#f6f8fa' }}\r\n          >\r\n            <p style={{ fontSize: '21px' }}>My Post</p>\r\n          </div>\r\n          <div\r\n            className='card-body row mx-0 py-4'\r\n            style={{ backgroundColor: 'rgb(237, 240, 243)' }}\r\n          >\r\n            {posts ? (\r\n              <table className='table'>\r\n                <thead>\r\n                  <tr>\r\n                    <th scope='col'>#</th>\r\n                    <th scope='col'>Link</th>\r\n                    <th scope='col'>Subject</th>\r\n                    <th scope='col'>Genre</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{postList}</tbody>\r\n              </table>\r\n            ) : (\r\n              <>\r\n                <div className='card-body'>\r\n                  <p className='card-text'>\r\n                    You have not added your certificate\r\n                  </p>\r\n                </div>\r\n              </>\r\n            )}\r\n            <Link\r\n              to='/add-post'\r\n              className='btn btn-primary w-100'\r\n              style={{ backgroundColor: '#419698' }}\r\n            >\r\n              Add More\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getPosts\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MyPost);\r\n","import React from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nconst SidebarLink = ({ label, to, activeOnlyWhenExact }) => (\r\n  <Route\r\n    path={to}\r\n    exact={activeOnlyWhenExact}\r\n    children={({ match }) => {\r\n      var active = match ? 'my-active' : '';\r\n      return (\r\n        <Link to={to} style={{ textDecoration: 'none' }}>\r\n          <li className={`list-group-item dropdown-item ${active}`}>{label}</li>\r\n        </Link>\r\n      );\r\n    }}\r\n  />\r\n);\r\nexport default SidebarLink;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport SidebarLink from './../commons/SidebarLink';\r\n\r\nclass SideBarAdmin extends Component {\r\n  componentWillMount() {\r\n    if (this.props.user.user.role !== 'admin') this.props.history.push('/');\r\n  }\r\n  componentWillUpdate() {\r\n    if (this.props.history.location.pathname === '/admin')\r\n      this.props.history.push('/admin/dashboard');\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='col-md-3'>\r\n        <ul className='list-group shadow-lg'>\r\n          <SidebarLink to='/admin/dashboard' label='DashBoard' />\r\n          <SidebarLink to='/admin/users' label='Users' />\r\n          <SidebarLink to='/admin/certs' label='User Cert' />\r\n          <SidebarLink to='/admin/posts' label='Posts' />\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nSideBarAdmin.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n  errors: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null,\r\n  null,\r\n  { pure: false }\r\n)(SideBarAdmin);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getPosts, approvePost } from './admin.action';\r\n\r\nclass PostBoard extends Component {\r\n  static propTypes = {\r\n    // prop: PropTypes\r\n  };\r\n  componentDidMount = () => {\r\n    this.props.getPosts();\r\n  };\r\n\r\n  onApprove(postId, state) {\r\n    this.props.approvePost({ postId, state });\r\n  }\r\n\r\n  render() {\r\n    const { posts } = this.props.admin;\r\n    let content;\r\n    if (posts.length) {\r\n      content = posts.map((post, id) => {\r\n        return (\r\n          <tr key={id}>\r\n            <td className='cs-td'>{post.userId._id}</td>\r\n            <td className='cs-td'>{post.link}</td>\r\n            <td className='cs-td'>{post.subject}</td>\r\n            <td className='cs-td'>{post.genre}</td>\r\n            <td className='cs-td'>{post.description}</td>\r\n            <td className='cs-td'>\r\n              <button\r\n                type='button'\r\n                className='btn btn-outline-success btn38 text-dark'\r\n                onClick={() => this.onApprove(post._id, 'approved')}\r\n              >\r\n                <i className='fas fa-check' />\r\n              </button>\r\n              <button\r\n                type='button'\r\n                className='btn btn-outline-warning btn38 text-danger'\r\n                onClick={() => this.onApprove(post._id, 'rejected')}\r\n              >\r\n                <i className='fas fa-times' />\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <div className='col-md-9 ts-col py-3 bg-white'>\r\n        <table className='table table-responsive d-md-table shadow-sm'>\r\n          <thead className='thead-inverse detail-table'>\r\n            <tr>\r\n              <th style={{ width: '10%' }}>User Id</th>\r\n              <th style={{ width: '20%' }}>Link</th>\r\n              <th style={{ width: '15%' }}>Subject</th>\r\n              <th style={{ width: '10%' }}>Genre</th>\r\n              <th style={{ width: '20%' }}>Description</th>\r\n              <th style={{ width: '15%' }}>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{content}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  admin: state.admin\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getPosts,\r\n  approvePost\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PostBoard);\r\n","import axios from 'axios';\r\nimport {\r\n  GET_POSTS_AD,\r\n  GET_CERT_AD,\r\n  APPROVE_POST_AD,\r\n  APPROVE_CERT_AD\r\n} from '../../constants';\r\n\r\nexport const getPosts = () => dispatch => {\r\n  axios.get('/api/admin/posts').then(res =>\r\n    dispatch({\r\n      type: GET_POSTS_AD,\r\n      payload: res.data.data.posts\r\n    })\r\n  );\r\n};\r\n\r\nexport const getCerts = () => dispatch => {\r\n  axios.get('/api/admin/certs').then(res =>\r\n    dispatch({\r\n      type: GET_CERT_AD,\r\n      payload: res.data.data.certs\r\n    })\r\n  );\r\n};\r\n\r\nexport const approvePost = body => dispatch => {\r\n  axios.post('/api/admin/approve-post', body).then(res =>\r\n    dispatch({\r\n      type: APPROVE_POST_AD,\r\n      payload: res.data.data.posts\r\n    })\r\n  );\r\n};\r\n\r\nexport const approveCert = body => dispatch => {\r\n  axios.post('/api/admin/approve-cert', body).then(res =>\r\n    dispatch({\r\n      type: APPROVE_CERT_AD,\r\n      payload: res.data.data.certs\r\n    })\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { getCerts, approveCert } from './admin.action';\r\n\r\nclass CertBoard extends Component {\r\n  static propTypes = {\r\n    // prop: PropTypes\r\n  };\r\n  componentDidMount = () => {\r\n    this.props.getCerts();\r\n  };\r\n\r\n  onApprove(userId, state) {\r\n    this.props.approveCert({ userId, state });\r\n  }\r\n\r\n  render() {\r\n    const { certs } = this.props.admin;\r\n    let content;\r\n    if (certs.length) {\r\n      content = certs.map((cert, id) => {\r\n        return (\r\n          <tr key={id}>\r\n            <td className='cs-td'>{cert._id}</td>\r\n            <td className='cs-td'>\r\n              <img className='cs-img' src={`/${cert.image.selfie}`} />\r\n            </td>\r\n            <td className='cs-td'>\r\n              <img\r\n                className='cs-img'\r\n                src={`/${cert.image.frontIdentityCard}`}\r\n              />\r\n            </td>\r\n            <td className='cs-td'>\r\n              <img className='cs-img' src={`/${cert.image.backIdentityCard}`} />\r\n            </td>\r\n            <td className='cs-td'>\r\n              <button\r\n                type='button'\r\n                className='btn btn-outline-success btn38 text-dark'\r\n                onClick={() => this.onApprove(cert._id, 'approved')}\r\n              >\r\n                <i className='fas fa-check' />\r\n              </button>\r\n              <button\r\n                type='button'\r\n                className='btn btn-outline-warning btn38 text-danger'\r\n                onClick={() => this.onApprove(cert._id, 'rejected')}\r\n              >\r\n                <i className='fas fa-times' />\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <div className='col-md-9 ts-col py-3 bg-white'>\r\n        <table className='table table-responsive d-md-table shadow-sm'>\r\n          <thead className='thead-inverse detail-table'>\r\n            <tr>\r\n              <th style={{ width: '15%' }}>User Id</th>\r\n              <th style={{ width: '20%' }}>Selfie</th>\r\n              <th style={{ width: '20%' }}>Front</th>\r\n              <th style={{ width: '20%' }}>Back</th>\r\n              <th style={{ width: '15%' }}>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{content}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  admin: state.admin\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getCerts,\r\n  approveCert\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CertBoard);\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Footer from './components/layout/Footer';\nimport ScrollToTop from './components/commons/ScrollToTop';\nimport Home from './components/layout/Home';\nimport UploadCertForm from './components/User/UploadCertForm';\nimport MyCert from './components/User/MyCert';\nimport PrivateRoute from './components/commons/PrivateRoute';\nimport PostVideoForm from './components/User/PostVideoForm';\nimport MyPost from './components/User/MyPost';\nimport SidebarAdmin from './components/Admin/SidebarAdmin';\nimport PostBoard from './components/Admin/PostBoard';\nimport CertBoard from './components/Admin/CertBoard';\n\nexport default () => (\n  <Router>\n    <ScrollToTop>\n      <Header />\n      <div className='container'>\n        <div className='row'>\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <PrivateRoute\n              exact\n              path='/add-certificate'\n              component={UploadCertForm}\n            />\n            <PrivateRoute exact path='/my-certificate' component={MyCert} />\n            <PrivateRoute exact path='/my-post' component={MyPost} />\n            <PrivateRoute exact path='/add-post' component={PostVideoForm} />\n            <PrivateRoute path='/admin' component={SidebarAdmin} />\n          </Switch>\n          <Switch>\n            <PrivateRoute exact path='/admin/posts' component={PostBoard} />\n            <PrivateRoute exact path='/admin/certs' component={CertBoard} />\n          </Switch>\n        </div>\n      </div>\n      <Footer />\n    </ScrollToTop>\n  </Router>\n);\n","import jwt_decode from 'jwt-decode';\r\nimport setAuthToken from './setAuthToken';\r\nimport { logout, getCurrentUser } from '../components/User/user.action';\r\n\r\nconst getAuth = store => {\r\n  if (localStorage.jwtToken) {\r\n    setAuthToken(localStorage.jwtToken);\r\n    const decoded = jwt_decode(localStorage.jwtToken);\r\n    localStorage.setItem('expiresAt', decoded.exp);\r\n    const currentTime = Date.now() / 1000;\r\n    if (decoded.exp < currentTime) {\r\n      store.dispatch(logout());\r\n      window.location.href = '/';\r\n    } else {\r\n      getCurrentUser(store.dispatch);\r\n    }\r\n  }\r\n};\r\nexport default getAuth;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Routers from './Routers';\nimport getAuth from './helpers/getAuth';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ngetAuth(store);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Routers />\n        <ToastContainer autoClose={2000} />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}